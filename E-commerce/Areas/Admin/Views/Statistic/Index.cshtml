@{
}
@{
    ViewData["Title"] = "Statistics";
}

<h1 style="text-align:center">Statistics</h1>


<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="apple-touch-icon" sizes="76x76" href="../assets/img/apple-icon.png">
    <link rel="icon" type="image/png" href="../assets/img/favicon.png">
    <title>
        Soft UI Dashboard 3 by Creative Tim
    </title>
    <!--     Fonts and icons     -->
    <link href="https://fonts.googleapis.com/css?family=Inter:300,400,500,600,700,800" rel="stylesheet" />
    <!-- Nucleo Icons -->
    <link href="https://demos.creative-tim.com/soft-ui-dashboard/assets/css/nucleo-icons.css" rel="stylesheet" />
    <link href="https://demos.creative-tim.com/soft-ui-dashboard/assets/css/nucleo-svg.css" rel="stylesheet" />
    <!-- Font Awesome Icons -->
    <script src="https://kit.fontawesome.com/1e7480455a.js" crossorigin="anonymous"></script>
    <!-- CSS Files -->
    <link id="pagestyle" href="~/css/soft-ui-dashboard.css" rel="stylesheet" />
    <!-- Nepcha Analytics (nepcha.com) -->
    <!-- Nepcha is a easy-to-use web analytics. No cookies and fully compliant with GDPR, CCPA and PECR. -->
    <script defer data-site="localhost:5139" src="https://api.nepcha.com/js/nepcha-analytics.js"></script>
</head>

<body class="g-sidenav-show  bg-gray-100">
    <main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg ">
        <div class="container-fluid py-4">
            <div class="row">
                <div class="col-lg-12 col-12">
                    <div class="row">
                        <div class="col-lg-3 col-md-6 col-12">
                            <div class="card">
                                <span class="mask bg-primary opacity-10 border-radius-lg"></span>
                                <div class="card-body p-3 position-relative">
                                    <div class="row">
                                        <div class="col-8 text-start">
                                            <div class="icon icon-shape bg-white shadow text-center border-radius-2xl">
                                                <i class="fa-solid fa-receipt fa-xl"></i>
                                            </div>
                                            <h3 class="text-white font-weight-bolder mb-0 mt-3"><span id="totalOrder">0</span></h3>
                                            <span class="text-white text-sm">Total Orders</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6 col-12 mt-4 mt-md-0">
                            <div class="card">
                                <span class="mask bg-dark opacity-10 border-radius-lg"></span>
                                <div class="card-body p-3 position-relative">
                                    <div class="row">
                                        <div class="col-8 text-start">
                                            <div class="icon icon-shape bg-white shadow text-center border-radius-2xl">
                                                <i class="fa-solid fa-money-bill fa-xl"></i>
                                            </div>
                                            <h3 class="text-white font-weight-bolder mb-0 mt-3"><span id="totalRevenue">$0.00</span></h3>
                                            <span class="text-white text-sm">Total Revenue</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6 col-12">
                            <div class="card">
                                <span class="mask bg-dark opacity-10 border-radius-lg"></span>
                                <div class="card-body p-3 position-relative">
                                    <div class="row">
                                        <div class="col-8 text-start">
                                            <div class="icon icon-shape bg-white shadow text-center border-radius-2xl">
                                                <i class="fa-solid fa-laptop fa-xl"></i>
                                            </div>
                                            <h3 class="text-white font-weight-bolder mb-0 mt-3"><span id="totalQuantity">0</span></h3>
                                            <span class="text-white text-sm">Total Products</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6 col-12">
                            <div class="card">
                                <span class="mask bg-dark opacity-10 border-radius-lg"></span>
                                <div class="card-body p-3 position-relative">
                                    <div class="row">
                                        <div class="col-8 text-start">
                                            <div class="icon icon-shape bg-white shadow text-center border-radius-2xl">
                                                <i class="ni ni-cart text-dark text-gradient text-lg opacity-10" aria-hidden="true"></i>
                                            </div>
                                            <h3 class="text-white font-weight-bolder mb-0 mt-3"></h3>
                                            <span class="text-white text-sm">Total Products</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row my-4">
                <div class="col-lg-12 col-md-6 mb-md-0 mb-4">
                    <div class="card">
                        <div class="card-header pb-0">
                            <div class="row">
                                <div class="col-lg-6 col-7">
                                    <h5>Top 5 Best Selling Products</h5>
                                </div>
                            </div>
                        </div>
                        <div style="font-size:15px" class="card-body px-0 pb-2">
                            <div class="table-responsive">
                                <table id="topProductsTable" class="table align-items-center mb-0">
                                    <thead>
                                        <tr>
                                            <th style="font-size:10px" class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Product Name</th>
                                            <th style="text-align:center" class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Image</th>
                                            <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Total Quantity Sold</th>
                                        </tr>
                                    </thead>
                                    <tbody style="text-align:center">
                                        <!-- Dữ liệu được đổ ở đây -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-lg-5 mb-lg-0 mb-4">
                    <div class="card z-index-2">
                        <div class="card-body p-2">
                            <h5>Monthly Orders</h5>
                            <div class="bg-dark border-radius-md py-3 pe-1 mb-3">
                                <div class="chart">
                                    <canvas id="chart-bars" class="chart-canvas" height="320"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-7">
                    <div class="card z-index-2">
                        <div class="card-header pb-0">
                            <h6>Sales overview</h6>
                            <p class="text-sm">
                                in <span class="font-weight-bold">@DateTime.Now.Year</span>
                            </p>
                        </div>
                        <div class="card-body p-3">
                            <div class="chart">
                                <canvas id="chart-line" class="chart-canvas" height="300"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @* =============================================================================================== *@
            <div class="container1">
                <h3 class="section-title1">Quarterly Revenue</h3>
                <table id="quarterlyRevenueTable" class="styled-table">
                    <thead>
                        <tr>
                            <th>Quarter</th>
                            <th>Revenue</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Data will be inserted here -->
                    </tbody>
                </table>

                <h3 class="section-title1">Products by Category</h3>
                <table id="categoryTable" class="styled-table">
                    <thead>
                        <tr>
                            <th>Category</th>
                            <th>Total Products</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Rows populated by JavaScript -->
                    </tbody>
                </table>

                <h3 class="section-title1">Products by Brand</h3>
                <table id="brandTable" class="styled-table">
                    <thead>
                        <tr>
                            <th>Brand</th>
                            <th>Total Products</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Rows populated by JavaScript -->
                    </tbody>
                </table>
            </div>

            @* <footer class="footer pt-3  ">
                <div class="container-fluid">
                    <div class="row align-items-center justify-content-lg-between">
                        <div class="col-lg-6 mb-lg-0 mb-4">
                            <div class="copyright text-center text-sm text-muted text-lg-start">
                                © <script>
                                      document.write(new Date().getFullYear())
                                </script>,
                                made with <i class="fa fa-heart"></i> by
                                <a href="https://www.creative-tim.com" class="font-weight-bold" target="_blank">Creative Tim</a>
                                for a better web.
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <ul class="nav nav-footer justify-content-center justify-content-lg-end">
                                <li class="nav-item">
                                    <a href="https://www.creative-tim.com" class="nav-link text-muted" target="_blank">Creative Tim</a>
                                </li>
                                <li class="nav-item">
                                    <a href="https://www.creative-tim.com/presentation" class="nav-link text-muted" target="_blank">About Us</a>
                                </li>
                                <li class="nav-item">
                                    <a href="https://www.creative-tim.com/blog" class="nav-link text-muted" target="_blank">Blog</a>
                                </li>
                                <li class="nav-item">
                                    <a href="https://www.creative-tim.com/license" class="nav-link pe-0 text-muted" target="_blank">License</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </footer> *@
        </div>
    </main>
    <div class="fixed-plugin">
        <a class="fixed-plugin-button text-dark position-fixed px-3 py-2">
            <i class="fa fa-cog py-2"> </i>
        </a>
        <div class="card shadow-lg ">
            <div class="card-header pb-0 pt-3 ">
                <div class="float-start">
                    <h5 class="mt-3 mb-0">Soft UI Configurator</h5>
                    <p>See our dashboard options.</p>
                </div>
                <div class="float-end mt-4">
                    <button class="btn btn-link text-dark p-0 fixed-plugin-close-button">
                        <i class="fa fa-close"></i>
                    </button>
                </div>
                <!-- End Toggle Button -->
            </div>
            <hr class="horizontal dark my-1">
            <div class="card-body pt-sm-3 pt-0">
                <!-- Sidebar Backgrounds -->
                <div>
                    <h6 class="mb-0">Sidebar Colors</h6>
                </div>
                <a href="javascript:void(0)" class="switch-trigger background-color">
                    <div class="badge-colors my-2 text-start">
                        <span class="badge filter bg-primary active" data-color="primary" onclick="sidebarColor(this)"></span>
                        <span class="badge filter bg-gradient-dark" data-color="dark" onclick="sidebarColor(this)"></span>
                        <span class="badge filter bg-gradient-info" data-color="info" onclick="sidebarColor(this)"></span>
                        <span class="badge filter bg-gradient-success" data-color="success" onclick="sidebarColor(this)"></span>
                        <span class="badge filter bg-gradient-warning" data-color="warning" onclick="sidebarColor(this)"></span>
                        <span class="badge filter bg-gradient-danger" data-color="danger" onclick="sidebarColor(this)"></span>
                    </div>
                </a>
                <!-- Sidenav Type -->
                <div class="mt-3">
                    <h6 class="mb-0">Sidenav Type</h6>
                    <p class="text-sm">Choose between 2 different sidenav types.</p>
                </div>
                <div class="d-flex">
                    <button class="btn btn-primary w-100 px-3 mb-2 active" data-class="bg-transparent" onclick="sidebarType(this)">Transparent</button>
                    <button class="btn btn-primary w-100 px-3 mb-2 ms-2" data-class="bg-white" onclick="sidebarType(this)">White</button>
                </div>
                <p class="text-sm d-xl-none d-block mt-2">You can change the sidenav type just on desktop view.</p>
                <!-- Navbar Fixed -->
                <div class="mt-3">
                    <h6 class="mb-0">Navbar Fixed</h6>
                </div>
                <div class="form-check form-switch ps-0">
                    <input class="form-check-input mt-1 ms-auto" type="checkbox" id="navbarFixed" onclick="navbarFixed(this)">
                </div>
                <hr class="horizontal dark my-sm-4">
                <a class="btn bg-gradient-dark w-100" href="https://www.creative-tim.com/product/soft-ui-dashboard">Free Download</a>
                <a class="btn btn-outline-dark w-100" href="https://www.creative-tim.com/learning-lab/bootstrap/license/soft-ui-dashboard">View documentation</a>
                <div class="w-100 text-center">
                    <a class="github-button" href="https://github.com/creativetimofficial/soft-ui-dashboard" data-icon="octicon-star" data-size="large" data-show-count="true" aria-label="Star creativetimofficial/soft-ui-dashboard on GitHub">Star</a>
                    <h6 class="mt-3">Thank you for sharing!</h6>
                    <a href="https://twitter.com/intent/tweet?text=Check%20Soft%20UI%20Dashboard%20made%20by%20%40CreativeTim%20%23webdesign%20%23dashboard%20%23bootstrap5&amp;url=https%3A%2F%2Fwww.creative-tim.com%2Fproduct%2Fsoft-ui-dashboard" class="btn btn-dark mb-0 me-2" target="_blank">
                        <i class="fab fa-twitter me-1" aria-hidden="true"></i> Tweet
                    </a>
                    <a href="https://www.facebook.com/sharer/sharer.php?u=https://www.creative-tim.com/product/soft-ui-dashboard" class="btn btn-dark mb-0 me-2" target="_blank">
                        <i class="fab fa-facebook-square me-1" aria-hidden="true"></i> Share
                    </a>
                </div>
            </div>
        </div>
    </div>
    <!--   Core JS Files   -->
    <script src="~/js/core/popper.min.js"></script>
    <script src="~/js/core/bootstrap.min.js"></script>
    <script src="~/js/plugins/perfect-scrollbar.min.js"></script>
    <script src="~/js/plugins/smooth-scrollbar.min.js"></script>
    <script src="~/js/plugins/chartjs.min.js"></script>

    <script>
        var ctx = document.getElementById("chart-bars").getContext("2d");

        fetch('@Url.Action("GetMonthlyOrderCount", "Statistic")')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok: ' + response.statusText);
                }
                return response.json();
            })
            .then(data => {
                console.log("Monthly Order Count Data: ", data);

                // Extract order counts and labels (months) from the fetched data
                const orderCounts = data.map(item => item.orderCount);
                const months = data.map(item => item.month);

                // Create the bar chart
                new Chart(ctx, {
                    type: "bar",
                    data: {
                        labels: months.length > 0 ? months : ["Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], // Use months or default
                        datasets: [{
                            label: "Sales",
                            tension: 0.4,
                            borderWidth: 0,
                            borderRadius: 4,
                            borderSkipped: false,
                            backgroundColor: "#fff",
                            data: orderCounts.length > 0 ? orderCounts : [450, 200, 100, 220, 500, 100, 400, 230, 500], // Use data or default
                            maxBarThickness: 6
                        }],
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false,
                            }
                        },
                        interaction: {
                            intersect: false,
                            mode: 'index',
                        },
                        scales: {
                            y: {
                                grid: {
                                    drawBorder: false,
                                    display: false,
                                    drawOnChartArea: false,
                                    drawTicks: false,
                                },
                                ticks: {
                                    suggestedMin: 0,
                                    suggestedMax: 500,
                                    beginAtZero: true,
                                    padding: 15,
                                    font: {
                                        size: 14,
                                        family: "Inter",
                                        style: 'normal',
                                        lineHeight: 2
                                    },
                                    color: "#fff"
                                },
                            },
                            x: {
                                grid: {
                                    drawBorder: false,
                                    display: false,
                                    drawOnChartArea: false,
                                    drawTicks: false
                                },
                                ticks: {
                                    display: false
                                },
                            },
                        },
                    },
                });

                // Populate the table with monthly order data
                const tableBody = document.querySelector("#monthlyOrderCountTable tbody");
                data.forEach(item => {
                    const row = `<tr><td>${item.month}</td><td>${item.orderCount}</td></tr>`;
                    tableBody.insertAdjacentHTML("beforeend", row);
                });
            })
            .catch(error => console.error('Error fetching monthly order count:', error));


        var ctx2 = document.getElementById("chart-line").getContext("2d");

        var gradientStroke1 = ctx2.createLinearGradient(0, 230, 0, 50);

        gradientStroke1.addColorStop(1, 'rgba(203,12,159,0.2)');
        gradientStroke1.addColorStop(0.2, 'rgba(72,72,176,0.0)');
        gradientStroke1.addColorStop(0, 'rgba(203,12,159,0)'); //purple colors

        var gradientStroke2 = ctx2.createLinearGradient(0, 230, 0, 50);

        gradientStroke2.addColorStop(1, 'rgba(20,23,39,0.2)');
        gradientStroke2.addColorStop(0.2, 'rgba(72,72,176,0.0)');
        gradientStroke2.addColorStop(0, 'rgba(20,23,39,0)'); //purple colors

        fetch('@Url.Action("GetMonthlyRevenue", "Statistic")')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok: ' + response.statusText);
                }
                return response.json();
            })
            .then(data => {
                console.log("Monthly Revenue Data: ", data);
                const monthlyRevenueData = data.map(item => item.revenue);
                const monthlyLabels = data.map(item => item.month);

                new Chart(ctx2, {
                    type: "line",
                    data: {
                        labels: monthlyLabels.length > 0 ? monthlyLabels : ["Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                        datasets: [{
                            label: "Revenue",
                            tension: 0.4,
                            borderWidth: 0,
                            pointRadius: 0,
                            borderColor: "#cb0c9f",
                            borderWidth: 3,
                            backgroundColor: gradientStroke1,
                            fill: true,
                            data: monthlyRevenueData.length > 0 ? monthlyRevenueData : [50, 40, 300, 220, 500, 250, 400, 230, 500],
                            maxBarThickness: 6
                        }],
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false,
                            }
                        },
                        interaction: {
                            intersect: false,
                            mode: 'index',
                        },
                        scales: {
                            y: {
                                grid: {
                                    drawBorder: false,
                                    display: true,
                                    drawOnChartArea: true,
                                    drawTicks: false,
                                    borderDash: [5, 5]
                                },
                                ticks: {
                                    display: true,
                                    padding: 10,
                                    color: '#b2b9bf',
                                    font: {
                                        size: 11,
                                        family: "Inter",
                                        style: 'normal',
                                        lineHeight: 2
                                    },
                                }
                            },
                            x: {
                                grid: {
                                    drawBorder: false,
                                    display: false,
                                    drawOnChartArea: false,
                                    drawTicks: false,
                                    borderDash: [5, 5]
                                },
                                ticks: {
                                    display: true,
                                    color: '#b2b9bf',
                                    padding: 20,
                                    font: {
                                        size: 11,
                                        family: "Inter",
                                        style: 'normal',
                                        lineHeight: 2
                                    },
                                }
                            },
                        },
                    },
                });

                const tableBody = document.querySelector("#monthlyRevenueTable tbody");
                data.forEach(item => {
                    const row = `<tr><td>${item.month}</td><td>${item.revenue.toFixed(2)}</td></tr>`;
                    tableBody.insertAdjacentHTML("beforeend", row);
                });
            })
            .catch(error => console.error('Error fetching monthly revenue:', error));
    </script>
    <script>
        var win = navigator.platform.indexOf('Win') > -1;
        if (win && document.querySelector('#sidenav-scrollbar')) {
            var options = {
                damping: '0.5'
            }
            Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
        }
    </script>
    <!-- Github buttons -->
    <script async defer src="https://buttons.github.io/buttons.js"></script>
    <!-- Control Center for Soft Dashboard: parallax effects, scripts for the example pages etc -->
    <script src="../assets/js/soft-ui-dashboard.min.js?v=1.1.0"></script>
</body>

</html>



<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Số lượng đơn hàng
    fetch('@Url.Action("GetMonthlyOrderCount", "Statistic")')
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok: ' + response.statusText);
            }
            return response.json();
        })
        .then(data => {
            console.log("Monthly Order Count Data: ", data);
            const tableBody = document.querySelector("#monthlyOrderCountTable tbody");
            data.forEach(item => {
                const row = `<tr><td>${item.month}</td><td>${item.orderCount}</td></tr>`;
                tableBody.insertAdjacentHTML("beforeend", row);
            });
        })
        .catch(error => console.error('Error fetching monthly order count:', error));

    // Doanh thu theo tháng
    fetch('@Url.Action("GetMonthlyRevenue", "Statistic")')
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok: ' + response.statusText);
            }
            return response.json();
        })
        .then(data => {
            console.log("Monthly Revenue Data: ", data);
            const tableBody = document.querySelector("#monthlyRevenueTable tbody");
            data.forEach(item => {
                const row = `<tr><td>${item.month}</td><td>${item.revenue.toFixed(2)}</td></tr>`;
                tableBody.insertAdjacentHTML("beforeend", row);
            });
        })
        .catch(error => console.error('Error fetching monthly revenue:', error));

    // Doanh thu theo quý
    fetch('@Url.Action("GetQuarterlyRevenue", "Statistic")')
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok: ' + response.statusText);
            }
            return response.json();
        })
        .then(data => {
            console.log("Quarterly Revenue Data: ", data);
            const tableBody = document.querySelector("#quarterlyRevenueTable tbody");
            data.forEach(item => {
                const row = `<tr><td>${item.quarter}</td><td>${item.revenue.toFixed(2)}</td></tr>`;
                tableBody.insertAdjacentHTML("beforeend", row);
            });
        })
        .catch(error => console.error('Error fetching quarterly revenue:', error));

    // Tổng đơn hàng và doanh thu
    fetch('@Url.Action("GetTotalOrdersAndRevenue", "Statistic")')
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok: ' + response.statusText);
            }
            return response.json();
        })
        .then(data => {
            console.log("Total Orders and Revenue Data: ", data);

            // Lấy phần tử HTML để hiển thị dữ liệu
            const totalOrderElement = document.querySelector("#totalOrder");
            const totalRevenueElement = document.querySelector("#totalRevenue");

            // Kiểm tra phần tử tồn tại, sau đó gán dữ liệu vào
            totalOrderElement.textContent = data.totalOrders;
            totalRevenueElement.textContent = "$" + data.totalRevenue.toFixed(2);
        })
        .catch(error => console.error("Error fetching total orders and revenue:", error));

    //5 sản phẩm bán chạy nhất
    fetch('@Url.Action("GetTop5BestSeller", "Statistic")')
        .then(response => response.json())
        .then(data => {
            console.log("Top 5 Best Selling Products Data:", data);

            const tableBody = document.querySelector("#topProductsTable tbody");
            tableBody.innerHTML = "";

            data.forEach(item => {
                const imageUrl = '@Url.Content("~/media/products/")' + item.image;
                const row = `<tr>
                            <td>${item.name}</td>
                            <td><img src="${imageUrl}" width="120"/></td>
                            <td>${item.totalQuantitySold}</td>
                         </tr>`;
                tableBody.insertAdjacentHTML("beforeend", row);
            });
        })
        .catch(error => console.error('Error fetching top 5 best selling products:', error));

    fetch('@Url.Action("GetProductStatistics", "Statistic")')
        .then(response => response.json())
        .then(data => {
            console.log("Product Statistics Data:", data);

            // Hiển thị tổng số lượng sản phẩm
            document.querySelector("#totalQuantity").textContent = data.totalQuantity;

            // Hiển thị thống kê theo loại
            const categoryTableBody = document.querySelector("#categoryTable tbody");
            categoryTableBody.innerHTML = "";
            data.productsByCategory.forEach(item => {
                const row = `<tr><td>${item.category}</td><td>${item.totalProducts}</td></tr>`;
                categoryTableBody.insertAdjacentHTML("beforeend", row);
            });

            // Hiển thị thống kê theo thương hiệu
            const brandTableBody = document.querySelector("#brandTable tbody");
            brandTableBody.innerHTML = "";
            data.productsByBrand.forEach(item => {
                const row = `<tr><td>${item.brand}</td><td>${item.totalProducts}</td></tr>`;
                brandTableBody.insertAdjacentHTML("beforeend", row);
            });
        })
        .catch(error => console.error('Error fetching product statistics:', error));

</script>
<style>
 /* Container Styling */
.container1 {
    font-family: Arial, sans-serif;
    background-color: #f5f5f5;
    margin: 20px;
    color: #333;
}

/* Section Title Styling */
.section-title1 {
    font-size: 1.5em;
    font-weight: bold;
    color: #333;
    margin-top: 20px;
    margin-bottom: 10px;
    padding-left: 10px;
    border-left: 4px solid #4CAF50;
}

/* Styled Table */
.styled-table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 20px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.styled-table thead {
    background-color: #4CAF50;
    color: #fff;
}

.styled-table thead th {
    padding: 12px;
    font-size: 1em;
    font-weight: bold;
    text-align: left;
}

.styled-table tbody tr {
    border-bottom: 1px solid #ddd;
}

.styled-table tbody tr:nth-child(even) {
    background-color: #f9f9f9;
}

.styled-table tbody tr:hover {
    background-color: #eafaf1;
}

.styled-table td {
    padding: 12px;
    text-align: left;
    font-size: 0.9em;
}

/* Bordered Table Cells */
.styled-table, .styled-table th, .styled-table td {
    border: 1px solid #ddd;
}

/* Mobile Responsiveness */
@@media (max-width: 768px) {
    .styled-table, .styled-table thead, .styled-table tbody, .styled-table th, .styled-table td, .styled-table tr {
        display: block;
    }
    .styled-table thead tr {
        position: absolute;
        top: -9999px;
        left: -9999px;
    }
    .styled-table tr {
        margin: 0 0 1rem 0;
        border-bottom: 2px solid #4CAF50;
    }
    .styled-table td {
        border: none;
        position: relative;
        padding-left: 50%;
        white-space: nowrap;
    }
    .styled-table td:before {
        position: absolute;
        top: 50%;
        left: 10px;
        width: 45%;
        padding-right: 10px;
        font-weight: bold;
        transform: translateY(-50%);
        color: #4CAF50;
        content: attr(data-label);
    }
}

</style>